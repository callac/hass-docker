name: Build Docker Image

on:
  workflow_dispatch:
    inputs:
      version:
        description: Specify a custom version
        required: false
        default: ''
  schedule:
    - cron: "0 20 * * *"

env:
  DOCKERHUB_REPO: ${{ secrets.HACN_USERNAME }}/hacn
  GITHUB_CR_REPO: ghcr.io/${{ github.repository_owner }}/hacn
  ALIYUN_CR_REPO: registry.cn-hangzhou.aliyuncs.com/${{ github.repository_owner }}/hacn
  QCLOUD_CR_REPO: ccr.ccs.tencentyun.com/${{ secrets.HACN_USERNAME }}/hacn

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [linux/amd64, linux/arm64, linux/arm/v7]
        version: |-
          ${{ fromJson(
          github.event_name == 'schedule' && '["","stable","latest","dev"]' || '[""]'
          ) }}
        addons: ['', mqtt]

    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Docker tags
        shell: bash
        run: |
          ver="${{ matrix.version }}"
          [ -z "$ver" ] && ver="${{ github.event.inputs.version }}"
          [ -z "$ver" ] && ver="$(date +%Y).$(date +%-m)"
          tags="type=raw,value=$ver"
          if [ -n "${{ matrix.addons }}" ]; then
            ver="$ver-${{ matrix.addons }}"
            tags="$tags\ntype=raw,value=$ver-${{ matrix.addons }}"
            if [ "${{ matrix.version }}" == "stable" ]; then
              tags="$tags\ntype=raw,value=${{ matrix.addons }}"
            fi
          fi
          echo "VERSION=$ver" >> $GITHUB_ENV
          echo "ALL_TAGS=$tags" >> $GITHUB_ENV
          echo "ALL_TAGS=$tags"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_REPO }}
            ${{ env.GITHUB_CR_REPO }}
            ${{ env.ALIYUN_CR_REPO }}
            ${{ env.QCLOUD_CR_REPO }}
          tags: |
            ${{ env.VERSION }}

      - name: Login to QCloud CR
        uses: docker/login-action@v3
        with:
          registry: ccr.ccs.tencentyun.com
          username: ${{ secrets.QCLOUD_CR_USER }}
          password: ${{ secrets.QCLOUD_CR_PASS }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Aliyun CR
        uses: docker/login-action@v3
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALIYUN_CR_USER }}
          password: ${{ secrets.ALIYUN_CR_PASS }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ${{ env.DOCKERHUB_REPO }}
            ${{ env.GITHUB_CR_REPO }}
            ${{ env.ALIYUN_CR_REPO }}
            ${{ env.QCLOUD_CR_REPO }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Aliyun CR
        uses: docker/login-action@v3
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALIYUN_CR_USER }}
          password: ${{ secrets.ALIYUN_CR_PASS }}

      - name: Login to QCloud CR
        uses: docker/login-action@v3
        with:
          registry: ccr.ccs.tencentyun.com
          username: ${{ secrets.QCLOUD_CR_USER }}
          password: ${{ secrets.QCLOUD_CR_PASS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker tags
        run: |
          ver="${{ matrix.version }}"
          [ -z "$ver" ] && ver="${{ github.event.inputs.version }}"
          [ -z "$ver" ] && ver="$(date +%Y).$(date +%-m)"
          tags="type=raw,value=$ver"
          if [ -n "${{ matrix.addons }}" ]; then
            tags="$tags\ntype=raw,value=$ver-${{ matrix.addons }}"
            if [ "${{ matrix.version }}" == "stable" ]; then
              tags="$tags\ntype=raw,value=${{ matrix.addons }}"
            fi
          fi
          echo "ALL_TAGS=$tags" >> $GITHUB_ENV
          echo "ALL_TAGS=$tags"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_REPO }}
            ${{ env.GITHUB_CR_REPO }}
            ${{ env.ALIYUN_CR_REPO }}
            ${{ env.QCLOUD_CR_REPO }}
          tags: ${{ env.ALL_TAGS }}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.DOCKERHUB_REPO }}@sha256:%s ' *)
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.GITHUB_CR_REPO }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.DOCKERHUB_REPO }}:${{ steps.meta.outputs.version }}
          docker buildx imagetools inspect ${{ env.GITHUB_CR_REPO }}:${{ steps.meta.outputs.version }}
          docker buildx imagetools inspect ${{ env.ALIYUN_CR_REPO }}:${{ steps.meta.outputs.version }}
          docker buildx imagetools inspect ${{ env.QCLOUD_CR_REPO }}:${{ steps.meta.outputs.version }}

  docker_pull:
    runs-on: ubuntu-latest
    needs:
      - merge
    timeout-minutes: 60
    steps:
      - name: Pull Docker Image
        run: |
          docker pull ghcr.nju.edu.cn/${{ github.repository_owner }}/hacn:${{ github.event.inputs.version }}
